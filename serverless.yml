service:
  name: bikehero
  awsKmsKeyArn: arn:aws:kms:us-east-1:704903784842:key/49b8e145-0e10-4e99-a899-c4cdfe07880c
org: personal
app: bikehero

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action: ssm:GetParameter
      Resource:
        'Fn::Join':
          - ':'
          - - 'arn:aws:ssm'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - parameter/${self:custom.service.name}/${self:custom.stage}/*
    - Effect: Allow
      Action:  kms:Decrypt
      Resource: ${self:custom.service.awsKmsKeyArn}


  environment:
    STAGE: ${self:custom.stage}

package:
  include:
    - 'bikehero/**/*.py'
  exclude:
    - '**/*'

custom:
  stage: ${opt:stage, self:provider.stage} # shortcut for current stage
  service: ${file(serverless.yml):service} # workaround for ${self:service}
  client: # serverless-finch config
    bucketName: bikehero.io
    distributionFolder: static
  pythonRequirements:
    dockerizePip: non-linux

plugins:
  - serverless-python-requirements
  - serverless-finch
functions:
  get_stands:
    handler: bikehero/handlers.get_stands
    timeout: 30
    events:
      - http:
          path: stands
          method: get

  add_stand:
    handler: bikehero/handlers.add_stand
    events:
      - http:
          path: stand
          method: post
          cors: true

  scrape_dero:
    handler: bikehero/handlers.scrape_dero_fixit_map
